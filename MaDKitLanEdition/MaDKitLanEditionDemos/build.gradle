/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
plugins {
    id "java"
    id "maven-publish"
    id "eclipse"
    id "idea"
    id "signing"
    id "application"
    //id "org.owasp.dependencycheck" version "6.1.0"
}

Properties props = new Properties()
def propFile = new File(project.getProjectDir().getParentFile().getParentFile().getParentFile(), 'credentials.properties')
def artifactory_Url="https://artifactory.distri-mind.fr/artifactory"
def user=""
def pwd=""
if (propFile.canRead())
{
    props.load(new FileInputStream(propFile))


    if (props!=null && props.containsKey('artifactory_contextUrl'))
        artifactory_Url=props.get("artifactory_contextUrl")
    if (props!=null && props.containsKey('artifactory_user'))
        user=props.get("artifactory_user")
    if (props!=null && props.containsKey('artifactory_password'))
        pwd=props.get("artifactory_password")
}
eclipse {
    classpath {
       downloadSources=true
    }
}

// In this section you declare where to find the dependencies of your project
repositories {


   	maven {
       		url "${artifactory_Url}/gradle-release"
       		if (user!="")
       		{
	       		credentials {
	              username "${user}"
	              password "${pwd}"
	            }
	         }
   	} 
}


dependencies {
     implementation(group:'com.distrimind.madkit', name: 'MaDKitLanEdition', version: '2.3.6-STABLE')
    
     
}
def javaVersion="8"
sourceCompatibility = javaVersion
targetCompatibility= javaVersion
allprojects {
	group='com.distrimind.madkitdemos'
    
    mainClassName = "com.distrimind.madkitdemos.MKLEDemos"

    //compileJava.options.compilerArgs << "-Xlint"
    if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_1_9)) {
        compileJava.options.compilerArgs.addAll(['--release', javaVersion] as Collection<? extends String>)
        javadoc.options.addStringOption("html5", "-quiet")
    }
}


version='1.0.37'


task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
    from "../LICENSE"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
    from "../LICENSE"
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version,
                   'Main-Class': project.mainClassName)
    }
    from "../LICENSE"

}

test {
	
	// enable TestNG support (default is JUnit)
   	useTestNG
   	{
   		suites 'src/test/java/com/distrimind/madkit/AllTestsNG.xml'
   	}
   
   // set heap size for the test JVM(s)
   minHeapSize = "256m"
   maxHeapSize = "2g"
   
   
   
 }


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'DÃ©mos for MaDKitLanEdition'
                description = 'MaDKit is an open source multiagent-based development platform written in Java. MaDKitLanEdition Advanced network futures which enables to connect several peers between them, and emulate a secured multi-agent system that virtually evolves into the same environment, i.e. the same virtual machine.'
                url = 'https://github.com/JazZ51/MaDKitLanEdition'
                developers {
                    developer {
                        id = 'mahdjoub'
                        name = 'Jason Mahdjoub'
                        email = 'jason.mahdjoub@distri-mind.fr'
                    }
                    developer {
                        id = 'michel'
                        name = 'Fabien Michel'
                    }
                    developer {
                        id = 'gutknecht'
                        name = 'Olivier Gutknecht'
                        email = 'jason.mahdjoub@distri-mind.fr'
                    }
                    developer {
                        id = 'ferber'
                        name = 'Jacques Ferber'
                        email = 'jason.mahdjoub@distri-mind.fr'
                    }
                }

                organization {
                    name = 'DistriMind'
                    url = 'https://github.com/JazZ51'
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/JazZ51/MaDKitLanEdition/issues'
                }
                scm {
                    connection = 'https://github.com/JazZ51/MaDKitLanEdition'
                }
                licenses {
                    license {
                        name = 'CeCILL-C FREE SOFTWARE LICENSE AGREEMENT'
                        url = 'http://cecill.info/licences/Licence_CeCILL-C_V1-en.txt'
                    }
                }

            }
        }
    }
    repositories {
        maven {
            credentials {
                username "${user}"
                password "${pwd}"
            }
            url "${artifactory_Url}/DistriMind-Public"
        }
    }
}
signing {
    useGpgCmd()
    required {!project.hasProperty('disableSigning')}
    if (required) {
        sign configurations.archives
        sign publishing.publications.mavenJava
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

